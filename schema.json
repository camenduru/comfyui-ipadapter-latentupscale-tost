{
    "$schema": "http://json-schema.org/draft-04/hyper-schema#",
    "type": "object",
    "properties": {
      "readme": {
        "type": "string",
        "title": "ComfyUI IPadapter LatentUpscale",
        "author": "Hu Ye, Jun Zhang, Sibo Liu, Xiao Han, Wei Yang, cubiq (ComfyUI_IPAdapter_plus), Henrik ForstÃ©n (ComfyUi_NNLatentUpscale)",
        "code": "https://github.com/tencent-ailab/IP-Adapter",
        "jupyter": "https://github.com/camenduru/IPAdapter-jupyter",
        "post": "https://x.com/camenduru/status/1782427208293716334",
        "tags": [
          "Image to Image"
        ],
        "widget": "readme"
      },
      "red_part": {
        "type": "string",
        "description": "Red Part Image URL",
        "widget": "textarea"
      },
      "red_positive_prompt": {
        "type": "string",
        "description": "Red Positive Prompt",
        "widget": "textarea"
      },
      "red_negative_prompt": {
        "type": "string",
        "description": "Red Negative Prompt",
        "widget": "textarea"
      },
      "red_threshold": {
        "type": "number",
        "description": "Red Threshold"
      },
      "red_image_weight": {
        "type": "number",
        "description": "Red Image Weight"
      },
      "red_prompt_weight": {
        "type": "number",
        "description": "Red Prompt Weight"
      },
      "green_part": {
        "type": "string",
        "description": "Green Part Image URL",
        "widget": "textarea"
      },
      "green_positive_prompt": {
        "type": "string",
        "description": "Green Positive Prompt",
        "widget": "textarea"
      },
      "green_negative_prompt": {
        "type": "string",
        "description": "Green Negative Prompt",
        "widget": "textarea"
      },
      "green_threshold": {
        "type": "number",
        "description": "Green Threshold"
      },
      "green_image_weight": {
        "type": "number",
        "description": "Green Image Weight"
      },
      "green_prompt_weight": {
        "type": "number",
        "description": "Green Prompt Weight"
      },
      "black_part": {
        "type": "string",
        "description": "Black Part Image URL",
        "widget": "textarea"
      },
      "black_positive_prompt": {
        "type": "string",
        "description": "Black Positive Prompt",
        "widget": "textarea"
      },
      "black_negative_prompt": {
        "type": "string",
        "description": "Black Negative Prompt",
        "widget": "textarea"
      },
      "black_threshold": {
        "type": "number",
        "description": "Black Threshold"
      },
      "black_image_weight": {
        "type": "number",
        "description": "Black Image Weight"
      },
      "black_prompt_weight": {
        "type": "number",
        "description": "Black Prompt Weight"
      },
      "color_mask": {
        "type": "string",
        "description": "Color Mask Part Image URL",
        "widget": "textarea"
      },
      "seed": {
        "type": "integer",
        "description": "Seed"
      },
      "steps": {
        "type": "integer",
        "description": "Steps"
      },
      "cfg": {
        "type": "number",
        "description": "CFG"
      },
      "sampler_name": {
        "type": "string",
        "widget": "select",
        "description": "Sampler Name",
        "oneOf": [
          {
            "description": "euler",
            "enum": [
              "euler"
            ]
          },
          {
            "description": "euler_ancestral",
            "enum": [
              "euler_ancestral"
            ]
          },
          {
            "description": "heun",
            "enum": [
              "heun"
            ]
          },
          {
            "description": "heunpp2",
            "enum": [
              "heunpp2"
            ]
          },
          {
            "description": "dpm_2",
            "enum": [
              "dpm_2"
            ]
          },
          {
            "description": "dpm_2_ancestral",
            "enum": [
              "dpm_2_ancestral"
            ]
          },
          {
            "description": "lms",
            "enum": [
              "lms"
            ]
          },
          {
            "description": "dpm_fast",
            "enum": [
              "dpm_fast"
            ]
          },
          {
            "description": "dpm_adaptive",
            "enum": [
              "dpm_adaptive"
            ]
          },
          {
            "description": "dpmpp_2s_ancestral",
            "enum": [
              "dpmpp_2s_ancestral"
            ]
          },
          {
            "description": "dpmpp_sde",
            "enum": [
              "dpmpp_sde"
            ]
          },
          {
            "description": "dpmpp_sde_gpu",
            "enum": [
              "dpmpp_sde_gpu"
            ]
          },
          {
            "description": "dpmpp_2m",
            "enum": [
              "dpmpp_2m"
            ]
          },
          {
            "description": "dpmpp_2m_sde",
            "enum": [
              "dpmpp_2m_sde"
            ]
          },
          {
            "description": "dpmpp_2m_sde_gpu",
            "enum": [
              "dpmpp_2m_sde_gpu"
            ]
          },
          {
            "description": "dpmpp_3m_sde",
            "enum": [
              "dpmpp_3m_sde"
            ]
          },
          {
            "description": "dpmpp_3m_sde_gpu",
            "enum": [
              "dpmpp_3m_sde_gpu"
            ]
          },
          {
            "description": "ddpm",
            "enum": [
              "ddpm"
            ]
          },
          {
            "description": "lcm",
            "enum": [
              "lcm"
            ]
          },
          {
            "description": "ddim",
            "enum": [
              "ddim"
            ]
          },
          {
            "description": "uni_pc",
            "enum": [
              "uni_pc"
            ]
          },
          {
            "description": "uni_pc_bh2",
            "enum": [
              "uni_pc_bh2"
            ]
          }
        ],
        "default": "dpmpp_2m"
      },
      "scheduler": {
        "type": "string",
        "widget": "select",
        "description": "Scheduler",
        "oneOf": [
          {
            "description": "normal",
            "enum": [
              "normal"
            ]
          },
          {
            "description": "karras",
            "enum": [
              "karras"
            ]
          },
          {
            "description": "exponential",
            "enum": [
              "exponential"
            ]
          },
          {
            "description": "heunpp2",
            "enum": [
              "heunpp2"
            ]
          },
          {
            "description": "sgm_uniform",
            "enum": [
              "sgm_uniform"
            ]
          },
          {
            "description": "simple",
            "enum": [
              "simple"
            ]
          },
          {
            "description": "ddim_uniform",
            "enum": [
              "ddim_uniform"
            ]
          }
        ],
        "default": "karras"
      },
      "width": {
        "type": "integer",
        "description": "Width"
      },
      "height": {
        "type": "integer",
        "description": "Height"
      },
      "image_denoise": {
        "type": "integer",
        "description": "Image Denoise"
      },
      "latent_upscale": {
        "type": "boolean",
        "description": "Latent Upscale"
      },
      "latent_upscale_size": {
        "type": "number",
        "description": "Latent Upscale Size"
      },
      "latent_upscale_denoise": {
        "type": "number",
        "description": "Latent Upscale Denoise"
      }
    },
    "buttons": [
      {
        "id": "enter",
        "label": "ðŸ¥ª Enter"
      }
    ]
  }